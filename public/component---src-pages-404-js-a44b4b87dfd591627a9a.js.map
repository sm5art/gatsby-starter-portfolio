{"version":3,"sources":["webpack:///./src/components/blog/layout.js","webpack:///./src/components/blog/seo.js","webpack:///./src/pages/404.js"],"names":["Layout","render","header","this","props","location","children","pathname","to","style","minHeight","background","theme","blogColor","marginLeft","marginRight","maxWidth","rhythm","padding","Date","getFullYear","href","React","Component","SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","NotFoundPage","siteTitle","data"],"mappings":"gLAUMA,E,kGACJC,OAAA,WACE,IAEIC,EAFJ,EAA+BC,KAAKC,MAA5BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAqBlB,OAhBEJ,GADEG,EAASE,SAEP,kBAAC,OAAD,CACEC,GAAE,KAEF,kBAAC,IAAD,QAaN,yBAAKC,MAAO,CAACC,UAAW,QAASC,WAAYC,QAAMC,YACnD,yBACEJ,MAAO,CACLK,WAAW,OACXC,YAAY,OACZC,SAAUC,YA/BM,IAgChBC,QAAQ,KAAMD,YAAO,MAGvB,gCAASf,GACT,8BAAOI,GACP,sCACK,IAAIa,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,c,GAtCWC,IAAMC,WA8CZvB,O,kCCxDf,0DAYA,SAASwB,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACE,kBAAC,IAAD,CACEQ,eAAgB,CACdP,QAEFE,MAAOA,EACPM,cAAa,KACbP,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASR,GAEX,CACES,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,EAAKG,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASR,GAEX,CACEO,KAAK,sBACLC,QAASL,IAEXQ,OAAOZ,KAKfH,EAAIgB,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O,sGCjFTiB,E,kGACJxC,OAAA,WACE,IACMyC,EADWvC,KAAKC,MAAduC,KACed,KAAKG,aAAaJ,MAEzC,OACE,kBAAC,IAAD,CAAQvB,SAAUF,KAAKC,MAAMC,SAAUuB,MAAOc,GAC5C,kBAAC,IAAD,CAAKd,MAAM,mBACX,yCACA,wF,GATmBN,IAAMC,WAelBkB","file":"component---src-pages-404-js-a44b4b87dfd591627a9a.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { Button } from 'antd';\n\nimport { rhythm, scale } from \"../../utils/typography\"\nimport { title, theme } from '../../utils/constants';\nimport { Logo } from '../../components/landing/header';\n\nconst BLOG_LAYOUT_WIDTH = 24;\n\nclass Layout extends React.Component {\n  render() {\n    const { location, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n          <Link\n            to={`/`}\n          >\n            <Logo/>\n          </Link>\n      )\n    } else {\n      header = (\n          <Link\n            to={`/`}\n          >\n            <Logo/>\n          </Link>\n      )\n    }\n    return (\n      <div style={{minHeight: '100vh', background: theme.blogColor}}>\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(BLOG_LAYOUT_WIDTH),\n          padding: `0 ${rhythm(0.5)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/blog/layout\"\nimport SEO from \"../components/blog/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}